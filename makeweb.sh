#!/usr/bin/env sh

###############################################################
#
# The Gridfinity Open Documentation License v1.0 (GFODLv1)
#
# Copyright (c) 2020 Gridfinity, LLC. <admin@gridfinity.com>
# Copyright (c) 2020 Jeffrey H. Johnson. <jeff@gridfinity.com>
#
# All Rights Reserved.
#
# Redistribution and use, in source and compiled forms,
# with or without modification, are permitted, provided
# that the following conditions are met:
#
#   1. Redistributions of source code must retain the
#      above copyright notice, this list of conditions,
# 	   and the following disclaimer, within the first
#	   ten lines of this file, unmodified.
#
#   2. Redistributions in compiled form must reproduce
#      the above copyright notice, this list of conditions,
#	   and the following disclaimer in the documentation,
#	   and/or other materials provided with the distribution.
#
# THIS DOCUMENTATION IS PROVIDED BY THE AUTHORS "AS IS",
# AND ANY WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT
# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR ANY PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES, INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR PROFITS,
# OR BUSINESS INTERRUPTION, HOWEVER CAUSED, AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT, INCLUDING NEGLIGENCE OR OTHERWISE, ARISING IN
# ANY WAY OUT OF THE USE OF THIS DOCUMENTATION, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###############################################################

set -u
set -e

if [ ! -f "./modules.json" ]; then
	printf '%s\n' \
		"Error: modules.json not found"
	exit 1
fi

printf '%s ' \
	"Cleaning JSON..."
fixjson -w -i 1 modules.json \
	>/dev/null 2>&1 ||
	{
		printf '%s\n' \
			"Error: fixjson failed" \
			>&2
		exit  1
	}
printf '%s\n' \
	"ok"

printf '%s ' \
	"Running vangen..."
"${GOBIN:?}/vangen" \
	-config "./modules.json" \
	-out "./public" \
	>/dev/null 2>&1 ||
	{
		printf '%s\n' \
			"Error: vangen failed" \
			>&2
		exit    1
	}
printf '%s\n' \
	"ok"

printf '%s ' \
	"Debranding index..."
grep -iav \
	'^Generated by .*vangen.*.$' \
	public/index.html \
	2>/dev/null |
	sed -e 's/ Go Modules//' |
	grep -iav 'Tools:' |
	grep -iav 'Libraries:' |
	sponge public/index.html \
		2>/dev/null 1>&2 ||
	{
		printf '%s\n' \
			"Error: debranding failed" \
			>&2
		exit     1
	}
printf '%s\n' \
	"ok"

printf '%s ' \
	"Cleaning HTML..."
find "./public" -name '*.html' -exec \
	tidy --add-meta-charset true -utf8 -w 0 -qiubnm \
	"{}" \; 2>/dev/null \
	>/dev/null 2>&1 ||
	{
		printf '%s\n' \
			"Error: cleaning failed" \
			>&2
		exit     1
	}
printf '%s\n' \
	"ok"

printf '%s ' \
	"Transforming HTML..."
find ./public -name '*.html' -print0 \
	2>/dev/null |
	xargs -0 -L1 -I{} \
		sh -c \
		'grep -iav ".*generator.*HTML.*Tidy.*>$" "{}" 2>/dev/null |
					sed -e "s/<HR>//" |
						sed -e "s/\"\//\"/" |
						sed -e "s/display: inline-block;/text-align: center; display: inline-block;/" |
						sed -e "s/<STYLE>/<STYLE>.center-screen { display: flex; flex-direction: column; justify-content: center; align-items: center; text-align: center; min-height: 100vh; }/" |
						sed -e "s/<DIV class=\"content\">/<DIV class=\"center-screen\">/" |
							sed -e "s/Home: /GoDocs: /" |
								sed -e "s/Source: /<BR>Repo: /" |
									grep -v "^ \+$" |
										sponge "{}" 
											>/dev/null 
												2>&1' \
		>/dev/null \
		2>&1
printf '%s\n' \
	"Done"

printf '%s\n' \
	"$(date)" >./.timestamp &&
	git add ./.timestamp

printf '%s\n' \
	"Pushing to GitLab..."
git add -A &&
	git commit -q -aS -m "Update pages: $(date)" && git push -q gitlab master &&
	printf '%s\n' "OK"
