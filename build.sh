#!/usr/bin/env sh

set -u
set -e

if [ ! -f "./modules.json" ]; then
	printf '%s\n' \
		"Error: modules.json not found"
	exit 1
fi

printf '%s ' \
	"Cleaning JSON..."
fixjson -w -i 1 modules.json \
	>/dev/null 2>&1 ||\
		{ printf '%s\n' \
			"Error: fixjson failed" \
				>&2; exit 1; };
printf '%s\n' \
	"ok"

printf '%s ' \
	"Running vangen..."
"${GOBIN:?}/vangen" \
		-config "./modules.json" \
		-out "./public" \
			>/dev/null 2>&1 ||\
				{ printf '%s\n' \
					"Error: vangen failed" \
						>&2; exit 1; };
printf '%s\n' \
	"ok"

printf '%s ' \
	"Debranding index..."
grep -iav \
	'^Generated by .*vangen.*.$' \
		public/index.html \
		2>/dev/null |\
			grep -iav ' Go Modules' |\
				sponge public/index.html \
				2>/dev/null 1>&2 ||\
					{ printf '%s\n' \
						"Error: debranding failed" \
							>&2; exit 1; };
printf '%s\n' \
	"ok"

printf '%s ' \
	"Cleaning HTML..."
find "./public" -name '*.html' -exec \
	tidy --add-meta-charset true -utf8 -w 0 -qiubnm \
		>/dev/null 2>&1 \
			"{}" \; \
				>/dev/null 2>&1 || \
					{ printf '%s\n' \
						"Error: cleaning failed" \
							>&2; exit 1; };
printf '%s\n' \
	"ok"

printf '%s ' \
	"Transforming HTML..."
find ./public -name '*.html' -print0 \
	2>/dev/null |\
		xargs -0 -L1 -I{} \
			sh -c \
				'grep -iav ".*generator.*HTML.*Tidy.*>$" "{}" 2>/dev/null |\
					sed -e "s/<HR>//" |\
						sed -e "s/\"\//\"/" |\
						sed -e "s/display: inline-block;/text-align: center; display: inline-block;/" |\
							sed -e "s/Home: /Documentation:<BR>/" |\
								sed -e "s/Source: /<BR>Source Code:<BR>/" |
									grep -v "^ \+$" |\
										sponge "{}" \
											>/dev/null \
												2>&1' \
					>/dev/null \
						2>&1
printf '%s\n' \
	"Done"

printf '%s\n' \
	"Pushing to GitLab..."
git add -A && git commit -aS -m "Update pages: $(date)" && git push gitlab master && \
	printf '%s\n' "OK"

